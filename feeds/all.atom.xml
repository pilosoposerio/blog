<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lost Packets</title><link href="https://srg-ics-uplb.github.io/blog/" rel="alternate"></link><link href="https://srg-ics-uplb.github.io/blog/feeds/all.atom.xml" rel="self"></link><id>https://srg-ics-uplb.github.io/blog/</id><updated>2019-03-23T00:00:00+08:00</updated><entry><title>Contiki - a Lightweight and Flexible Operating System for Tiny Networked Sensors</title><link href="https://srg-ics-uplb.github.io/blog/contiki-a-lightweight-and-flexible-operating-system-for-tiny-networked-sensors.html" rel="alternate"></link><published>2019-03-23T00:00:00+08:00</published><updated>2019-03-23T00:00:00+08:00</updated><author><name>Joseph Anthony C. Hermocilla</name></author><id>tag:srg-ics-uplb.github.io,2019-03-23:/blog/contiki-a-lightweight-and-flexible-operating-system-for-tiny-networked-sensors.html</id><summary type="html">&lt;p&gt;This paper &lt;a class="citation-reference" href="#dunkels2005" id="id1"&gt;[DUNKELS2005]&lt;/a&gt; describes the design and implementation of Contiki. The paper describes the characteristics of sensor
networks and its special requirements. These special requirements were considered in Contiki's design. For example,
nodes in sensor networks are tiny and limited in processing power and memory. Thus, Contiki should be able …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This paper &lt;a class="citation-reference" href="#dunkels2005" id="id1"&gt;[DUNKELS2005]&lt;/a&gt; describes the design and implementation of Contiki. The paper describes the characteristics of sensor
networks and its special requirements. These special requirements were considered in Contiki's design. For example,
nodes in sensor networks are tiny and limited in processing power and memory. Thus, Contiki should be able to
run on these devices. Contiki is an event-driven operating system which means that it responds when an event happens.
The main components of Contiki are the kernel, libraries, program loader, and a set of processes.&lt;/p&gt;
&lt;table class="docutils citation" frame="void" id="dunkels2005" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[DUNKELS2005]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;ol class="first last upperalpha simple"&gt;
&lt;li&gt;Dunkels, B. Gronvall, and T. Voigt, “Contiki - a lightweight and flexible operating system for tiny networked sensors,” in 29th Annual IEEE International Conference on Local Computer Networks, 2004, pp. 455–462.&lt;/li&gt;
&lt;/ol&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content></entry><entry><title>Lecture Talk on Math in Action 2019</title><link href="https://srg-ics-uplb.github.io/blog/lecture-talk-on-math-in-action-2019.html" rel="alternate"></link><published>2019-03-05T00:00:00+08:00</published><updated>2019-03-05T00:00:00+08:00</updated><author><name>Miyah D. Queliste</name></author><id>tag:srg-ics-uplb.github.io,2019-03-05:/blog/lecture-talk-on-math-in-action-2019.html</id><summary type="html">&lt;p&gt;Miyah participated as one of the resource speakers in the Lecture Series of the recently concluded Math in Action 2019 last February 9-10, 2019. The event, organized by SAM-UP, a student academic organization in UPLB, was participated by students from different high schools nationwide. With this year's theme, &amp;quot;Connecting the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Miyah participated as one of the resource speakers in the Lecture Series of the recently concluded Math in Action 2019 last February 9-10, 2019. The event, organized by SAM-UP, a student academic organization in UPLB, was participated by students from different high schools nationwide. With this year's theme, &amp;quot;Connecting the Dots Between Sustainable Innovation and Mathematics&amp;quot;, Miyah discussed about Mathematics' role in Robotics specifically in control systems. Most of the students are already familiar with drones and its applications. She emphasized the importance of the knowledge in Mathematical concepts such as integral and derivatives in designing controllers for drones and robots in general.&lt;/p&gt;
</content></entry><entry><title>How to contribute to this blog (Short Method)</title><link href="https://srg-ics-uplb.github.io/blog/how-to-contribute-to-this-blog-short-method.html" rel="alternate"></link><published>2019-02-02T00:00:00+08:00</published><updated>2019-03-06T00:00:00+08:00</updated><author><name>Joseph Anthony C. Hermocilla</name></author><id>tag:srg-ics-uplb.github.io,2019-02-02:/blog/how-to-contribute-to-this-blog-short-method.html</id><summary type="html">&lt;p&gt;This method is easier because the editing will be done in
github itself via the web browser.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Fork the original repository&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/srg-ics-uplb/blog"&gt;SRG Blog Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is accomplished in github and you must be logged in. You should have
the repository under your account after the fork. The succeeding steps …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This method is easier because the editing will be done in
github itself via the web browser.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Fork the original repository&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/srg-ics-uplb/blog"&gt;SRG Blog Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is accomplished in github and you must be logged in. You should have
the repository under your account after the fork. The succeeding steps will be done on this forked repo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Create your entries&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If this is your first entry, you must create a folder for your articles.&lt;/p&gt;
&lt;p&gt;Navigate to  &lt;tt class="docutils literal"&gt;&amp;quot;contents/articles&amp;quot;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Click the &lt;tt class="docutils literal"&gt;&amp;quot;Create new file button&amp;quot;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Specify the file name of the first entry, say &lt;tt class="docutils literal"&gt;&amp;quot;clinton/clinton_001.rst&amp;quot;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;You can begin writing your article. Save.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.getpelican.com/en/3.6.3/content.html"&gt;Adding content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst"&gt;More on RST Syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For your succeeding articles, you can go directly to your own folder and
create the file there.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Using images&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Navigate to  &lt;tt class="docutils literal"&gt;&amp;quot;contents/images&amp;quot;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Upload your image, say &amp;quot;code.png&amp;quot;.&lt;/p&gt;
&lt;p&gt;To use your image in the article:&lt;/p&gt;
&lt;pre class="code html literal-block"&gt;
.. image:: ./images/code.png
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3. Make a pull request&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If your article is ready to be published, make a pull request.&lt;/p&gt;
</content></entry><entry><title>How to contribute to this blog (Long Method)</title><link href="https://srg-ics-uplb.github.io/blog/how-to-contribute-to-this-blog-long-method.html" rel="alternate"></link><published>2019-02-01T00:00:00+08:00</published><updated>2019-03-05T00:00:00+08:00</updated><author><name>Joseph Anthony C. Hermocilla</name></author><id>tag:srg-ics-uplb.github.io,2019-02-01:/blog/how-to-contribute-to-this-blog-long-method.html</id><summary type="html">&lt;p&gt;Contributions are encouraged from SRG members.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Set up the development environment&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv pelican-blog-venv
$ &lt;span class="nb"&gt;source&lt;/span&gt; pelican-blog-venv/bin/activate
$ pip install pelican markdown ghp-import
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2. Fork the original repository&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/srg-ics-uplb/blog"&gt;SRG Blog Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is accomplished in github and you must be logged in. You should have
the repository under your account …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Contributions are encouraged from SRG members.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Set up the development environment&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv pelican-blog-venv
$ &lt;span class="nb"&gt;source&lt;/span&gt; pelican-blog-venv/bin/activate
$ pip install pelican markdown ghp-import
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2. Fork the original repository&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/srg-ics-uplb/blog"&gt;SRG Blog Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is accomplished in github and you must be logged in. You should have
the repository under your account after the fork.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Clone the repository from your account&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/&amp;lt;YOUR_USERNAME&amp;gt;/blog.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3. Configure a remote for your fork&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git remote -v
$ git remote add upstream https://github.com/srg-ics-uplb/blog.git
$ git remote -v
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://help.github.com/en/articles/configuring-a-remote-for-a-fork"&gt;Help: Create a remote&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Sync your fork with the upstream&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git fetch upstream
$ git checkout master
$ git merge upstream/master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://help.github.com/en/articles/syncing-a-fork"&gt;Help: Sync from upstream&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Create your blog entry&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At this point you are ready to write your entries. Create your own directory inside
content. You're going to place all your entries in this directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p content/&amp;lt;YOUR_NICKNAME&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, the source for this entry is &lt;a class="reference external" href="https://raw.githubusercontent.com/srg-ics-uplb/blog/master/content/articles/jach/jach_001.rst"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If your entry has images, place them in the images directory,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Additional Resources&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.getpelican.com/en/3.6.3/content.html"&gt;Adding content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst"&gt;More on RST Syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="" src="./images/jach/srg.png" style="width: 60pt;" /&gt;
</content></entry></feed>